import nodemailer from 'nodemailer';
import { env } from '../config/env';

// T·∫°o transporter cho nodemailer
const transporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
        user: env.EMAIL_USER,
        pass: env.EMAIL_PASS
    }
});

/**
 * G·ª≠i email ch·ª©a m√£ OTP
 * @param to Email ng∆∞·ªùi nh·∫≠n
 * @param otp M√£ OTP
 * @param name T√™n ng∆∞·ªùi d√πng
 */
export const sendOTPEmail = async (to: string, otp: string, name: string): Promise<void> => {
    const mailOptions = {
        from: `"OTP Verification" <${env.EMAIL_USER}>`,
        to: to,
        subject: 'M√£ x√°c th·ª±c OTP',
        html: `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                <h2 style="color: #333; text-align: center;">X√°c th·ª±c Email</h2>
                <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
                    <p>Xin ch√†o <strong>${name}</strong>,</p>
                    <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n. Vui l√≤ng s·ª≠ d·ª•ng m√£ OTP d∆∞·ªõi ƒë√¢y ƒë·ªÉ x√°c th·ª±c email c·ªßa b·∫°n:</p>
                    
                    <div style="background-color: #007bff; color: white; padding: 15px; text-align: center; border-radius: 5px; margin: 20px 0;">
                        <h1 style="margin: 0; font-size: 32px; letter-spacing: 5px;">${otp}</h1>
                    </div>
                    
                    <p><strong>L∆∞u √Ω quan tr·ªçng:</strong></p>
                    <ul>
                        <li>M√£ OTP n√†y c√≥ hi·ªáu l·ª±c trong ${env.OTP_EXPIRES_IN / 60} ph√∫t</li>
                        <li>Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai</li>
                        <li>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán y√™u c·∫ßu n√†y, vui l√≤ng b·ªè qua email n√†y</li>
                        <li>M√£ OTP ch·ªâ s·ª≠ d·ª•ng ƒë∆∞·ª£c m·ªôt l·∫ßn</li>
                    </ul>
                </div>
                
                <div style="text-align: center; color: #666; font-size: 12px;">
                    <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
                    <p>N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá h·ªó tr·ª£.</p>
                </div>
            </div>
        `
    };

    try {
        await transporter.sendMail(mailOptions);
        console.log(`ƒê√£ g·ª≠i email OTP ƒë·∫øn ${to}`);
    } catch (error) {
        console.error('L·ªói g·ª≠i email OTP:', error);
        throw new Error('Kh√¥ng th·ªÉ g·ª≠i email OTP');
    }
};

/**
 * G·ª≠i email th√¥ng b√°o x√°c th·ª±c th√†nh c√¥ng
 * @param to Email ng∆∞·ªùi nh·∫≠n
 * @param name T√™n ng∆∞·ªùi d√πng
 */
export const sendVerificationSuccessEmail = async (to: string, name: string): Promise<void> => {
    const mailOptions = {
        from: `"OTP Verification" <${env.EMAIL_USER}>`,
        to: to,
        subject: 'X√°c th·ª±c Email Th√†nh C√¥ng',
        html: `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                <h2 style="color: #28a745; text-align: center;">üéâ X√°c th·ª±c Th√†nh C√¥ng!</h2>
                <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
                    <p>Xin ch√†o <strong>${name}</strong>,</p>
                    <p>üéâ Ch√∫c m·ª´ng! Email c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c th·ª±c th√†nh c√¥ng.</p>
                    <p>T√†i kho·∫£n c·ªßa b·∫°n hi·ªán ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t v√† b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng t·∫•t c·∫£ c√°c t√≠nh nƒÉng c·ªßa h·ªá th·ªëng.</p>
                    
                    <div style="background-color: #28a745; color: white; padding: 15px; text-align: center; border-radius: 5px; margin: 20px 0;">
                        <h3 style="margin: 0;">T√†i kho·∫£n ƒë√£ ƒë∆∞·ª£c x√°c th·ª±c!</h3>
                    </div>
                </div>
                
                <div style="text-align: center; color: #666; font-size: 12px;">
                    <p>C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i.</p>
                    <p>N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá h·ªó tr·ª£.</p>
                </div>
            </div>
        `
    };

    try {
        await transporter.sendMail(mailOptions);
        console.log(`ƒê√£ g·ª≠i email th√¥ng b√°o x√°c th·ª±c th√†nh c√¥ng ƒë·∫øn ${to}`);
    } catch (error) {
        console.error('L·ªói g·ª≠i email th√¥ng b√°o x√°c th·ª±c th√†nh c√¥ng:', error);
        // Kh√¥ng throw error v√¨ ƒë√¢y ch·ªâ l√† email th√¥ng b√°o
    }
};
